- hosts: all
  tasks:

  - name: Installing pip openshift module
    pip:
      name: openshift

- hosts: node1
  tasks:
    - name: Create a k8s namespace
      k8s:
        state: present
        name: mocc
        api_version: v1
        kind: Namespace
    - name: Create backend service
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            namespace: mocc
            name: cc-backend-service
            labels:
              app: backend
          spec:
            ports:
            - port: 80
              name: http
            type: ClusterIP
            selector:
              app: backend
    - name: Create backend deployment
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Deployment
          metadata:
            name: cc-backend-service
            namespace: mocc
          spec:
            selector:
              matchLabels:
                app: backend
            replicas: 3
            template:
              metadata:
                labels:
                  app: backend
              spec:
                containers:
                - name: backend
                  image: fpaul/mocc-nginx:backend
                  imagePullPolicy: Always
                  ports:
                  - containerPort: 80
                    name: http
                  livenessProbe:
                      httpGet:
                        path: /ready
                        port: 80
                        scheme: HTTP
                        httpHeaders:
                        - name: CC-READY
                          value: Backend
                  readinessProbe:
                      httpGet:
                        path: /ready
                        port: 80
                        scheme: HTTP
                        httpHeaders:
                        - name: CC-READY
                          value: Backend
    - name: Create frontend service
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            namespace: mocc
            name: cc-frontend-service
            labels:
              app: frontend
          spec:
            ports:
            - port: 80
              name: http
            type: NodePort
            selector:
              app: frontend 
    - name: Create frontend deployment
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Deployment
          metadata:
            name: cc-frontend-service
            namespace: mocc
          spec:
            selector:
              matchLabels:
                app: frontend 
            replicas: 3
            template:
              metadata:
                labels:
                  app: frontend 
              spec:
                containers:
                - name: frontend
                  image: fpaul/mocc-nginx:frontend
                  imagePullPolicy: Always
                  ports:
                  - containerPort: 80
                    name: http
                  livenessProbe:
                      httpGet:
                        path: /ready
                        port: 80
                        scheme: HTTP
                        httpHeaders:
                        - name: CC-READY
                          value: Frontend
                  readinessProbe:
                      httpGet:
                        path: /ready
                        port: 80
                        scheme: HTTP
                        httpHeaders:
                        - name: CC-READY
                          value: Frontend
