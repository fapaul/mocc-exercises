Used Debian Instance on 

#### QEMU Installation (https://wiki.debian.org/QEMU)
sudo apt-get install qemu-system-x86 



#### Docker Installation - Taken from Docker's official Docs
(https://docs.docker.com/install/linux/docker-ce/debian/#set-up-the-repository)

# Update the apt package index
sudo apt-get update

# Install packages to allow apt to use a repository over HTTPS
sudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common

# Add Dockerâ€™s official GPG key
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -

# Set up the stable repository
sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/debian \
   $(lsb_release -cs) \
   stable"

# Install the latest version of Docker CE
sudo apt-get install docker-ce

# Copy Scripts (Google Cloud specific)
gcloud compute scp --recurse scripts robertstark@${instance-name}:~/scripts --zone ${zone}



#### Rumprun Installation (https://github.com/rumpkernel/wiki/wiki/Tutorial:-Building-Rumprun-Unikernels)

# Install necessary dependencies zlib
apt-get install zlib1g-dev

# Clone rumprun repo
git clone http://repo.rumpkernel.org/rumprun

# Update the registered submodules to match what the superproject expects by cloning missing submodules and updating the working tree of the submodules.
cd rumprun
git submodule update --init

# Build rumprun script
CC=cc ./build-rr.sh hw

# Put the toolchain into our path so that we can execute the compiler later
export PATH="${PATH}:$(pwd)/rumprun/bin"



#### Set up docker container and run benchmarks

# Set up Debian Docker container
docker run -it debian

# Copy scripts to Docker container
docker cp ./scripts ${containerId}:/scripts

# Connect to docker container
docker exec -it ${containerId} /bin/bash/

# Install gcc and fio
apt-get install gcc
apt-get install fio

# Run scripts
./run_benchmarks.sh


#### Set up QEMU Debian image (see: https://cloud.google.com/compute/docs/instances/enable-nested-virtualization-vm-instances?hl=de)

# Download Debian image (https://people.debian.org/~aurel32/qemu/amd64/)
# Warning: Ran into errors installing gcc and fio through apt-get using debian_squeeze image; Instead used debian_wheezy
wget https://people.debian.org/~aurel32/qemu/amd64/debian_wheezy_amd64_standard.qcow2

# Start Debian image
# -m: specifies memory space (512Mb)
# -curses: display the VGA output when in text mode using a curses/ncurses interface
sudo qemu-system-x86_64 -hda debian-9.6.1-20181206-openstack-amd64.qcow2 -m 512 -curses

# To use KVM add flag -enable-kvm
sudo qemu-system-x86_64 -enable-kvm -hda debian_squeeze_amd64_standard.qcow2 -m 512 -curses


# Copied benchmarks using wget
# Had to set -std=c99 flag for gcc

